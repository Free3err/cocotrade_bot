from aiogram import Dispatcher, types, F
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


class Store:
    @staticmethod
    def register_all(dispatcher: Dispatcher):
        dispatcher.callback_query.register(Store.common_store, F.data == "store")
        dispatcher.callback_query.register(Store.donut_store, F.data == "donut_store")

        # dispatcher.callback_query.register(Store.coconut_seems, F.data == "coconut_seems")
        # dispatcher.callback_query.register(Store.fertilizers, F.data == "fertilizers")
        # dispatcher.callback_query.register(Store.donut, F.data == "donut")
        # dispatcher.callback_query.register(Store.experimental_coconut_seems, F.data == "experimental_coconut_seems")

    @staticmethod
    async def common_store(callback_query: types.CallbackQuery):
        buttons = [[InlineKeyboardButton(text="ü•• –°–µ–º–µ–Ω–∞ –∫–æ–∫–æ—Å–æ–≤", callback_data="coconuts_seems")],
                   [InlineKeyboardButton(text="üå± –£–¥–æ–±—Ä–µ–Ω–∏—è", callback_data="fertilizers")],
                   [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_stores_menu")]]
        markup = InlineKeyboardMarkup(inline_keyboard=buttons)

        await callback_query.message.edit_text("üè™ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–±—ã—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω!</b>\n"
                                               "\n"
                                               "–ù–∞—à –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –Ω–∏–∂–µ:", parse_mode="HTML",
                                               reply_markup=markup)

    @staticmethod
    async def donut_store(callback_query: types.CallbackQuery):
        buttons = [[InlineKeyboardButton(text="üïäÔ∏è –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ", callback_data="donut")],
                   [InlineKeyboardButton(text="ü•• –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–æ–∫–æ—Å—ã",
                                         callback_data="experimental_coconuts_seems")],
                   [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_stores_menu")]]
        markup = InlineKeyboardMarkup(inline_keyboard=buttons)

        await callback_query.message.edit_text(f"üè¨ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ donut –º–∞–≥–∞–∑–∏–Ω!</b>\n"
                                               f"\n"
                                               f"–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–ø—ã—Ç–∞—Ç—å —Å–µ–±—è –≤ —É–¥–∞—á–µ –∏–ª–∏ –ø–æ–∂–µ—Ä—Ç–æ–≤–æ–≤–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É "
                                               f"–Ω–∞ –ø—Ä–æ–ø–∏—Ç–∞–Ω–∏–µ!", parse_mode="HTML", reply_markup=markup
                                               )

    @staticmethod
    async def coconuts_seems(callback_query: types.CallbackQuery):
        pass

    @staticmethod
    async def fertilizers(callback_query: types.CallbackQuery):
        pass

    @staticmethod
    async def selected_store_item(callback_query: types.CallbackQuery):
        pass
